/* project.scss */

/* ---------------------------------------------------------------------
 Project-specific generic element declarations
------------------------------------------------------------------------ */
@use "utils/_utils" as *;
@use "components/__components" as *;
@use "sass:math";

* {
	box-sizing: border-box;
}

html {
	font-size: 62.5%; // Reset base font size for easier em & rem calculations: 1em = 10px
	-webkit-overflow-scrolling: touch;
	min-height: -webkit-fill-available;
	position: relative; // logo buddy
	overflow-x: hidden; // logo buddy

	@media ( prefers-reduced-motion: no-preference ) {
		scroll-behavior: smooth;
	}

}

body {
	margin: 0;
	min-height: 100vh;
	flex-direction: column;
	background: getColor('white',10);
	color: getColor('black',10);
	font-family: $font-primary;
	-webkit-font-smoothing: antialiased;
	-moz-osx-font-smoothing: grayscale;
	-webkit-overflow-scrolling: touch;	

	@include breakpoint(md) {
		font-size: 200%;
	}

	@include breakpoint(lg) {
		font-size: 150%;
	}

	@include breakpoint(xl) {
	}

}

h1, h2, h3, h4, h5, h6 {
	margin: 0;
	font-weight: normal;
}

ol, ul {
	margin: 0;
	padding: 0;
}

p {
	margin: 0;
}

a {
	color: getColor('black',10);
	transition: all .25s ease-in-out;

	&:hover {
		color: getColor('deep');
	}
}

em {
	font-style: italic;
}

strong {
	font-weight: 700;
}

picture,
img {
	display: block;
	max-width: 100%;
}

.viewport {
	&._is-debug::before {
		font-size: 1.1em;
	}
}

.svg-defs {
	&._is-hidden {
		display: none;
	}
}

/* ---------------------------------------------------------------------
  Accessibility Skip
------------------------------------------------------------------------ */
.skipLink {
	border: 1px solid getColor('black');
	border-top: none;
	display: block;
	left: 50%;
	padding: 10px;
	position: absolute;
	z-index: 100;
	transform: translateY(-100%);
	transition: transform 0.3s;
	background: getColor('white');
	color: getColor('black');
	font-weight: 700;

	@include breakpoint(sm) {
		font: normal 1.8em/133% $font-secondary;
	}
}
  
.skip-link:focus {
	transform: translateY(0%);
}

.skip-link:focus-within {
	transform: translateY(0%);
}

/* ---------------------------------------------------------------------
  Primary Header
------------------------------------------------------------------------ */
.primaryHeader {
	padding: 2.7em 2em;
	background: getColor('black',10);
	display: flex;
	flex-flow: row nowrap;

	&-label {
		@include visuallyHide;
	}

	&-svg {
		height: 36.86px;
		width: 160px;
		flex-basis: auto;
	}

	&-buttons {
		display: flex;
		flex-basis: 100%;
		justify-content: flex-end;
	}

}

.globalButton {
	@include resetButton;
	border-radius: 100px;
	padding: 12px 32px;
	background-color: getColor('blue');
	color: getColor('white',10);
	font-size: 1rem;

	&--alt {
		background-color: getColor('black',10);
	}

	&-label {
		@include getType('nav-link');
	}

}

/* ---------------------------------------------------------------------
  PrimaryContent
------------------------------------------------------------------------ */
.primaryContent {
	padding: 0 4.5em;
	font-size: 1rem;
}

/* ---------------------------------------------------------------------
  Themes
------------------------------------------------------------------------ */
._is-black-on-white {
	background-color: getColor('white',10);
	* {
		color: getColor('black',10);
	}
}

._is-white-on-black {
	background: getColor('black',10);
	* {
		color: getColor('white',10);
	}
}

._is-black-on-orange {
	background: getColor('orange');
	* {
		color: getColor('black',10);
	}
}

/* ---------------------------------------------------------------------
  Sections
------------------------------------------------------------------------ */
.innerSection {
	$selector: &;
	font-size: 1rem;
	border-radius: 10px;
	padding: 0 8.1em;

	&--splash {
		padding-top: 10em;
		padding-bottom: 14.963em;
		width: calc(100vw - 6em); // extend the full-width
		background-image: url('../images/splash-bg.png');
		background-position: 100% 23px;
		background-repeat: no-repeat;
		background-size: 60%;
	}

	&--bulletin {
		padding-top: 14.2em;
		padding-bottom: 31.1em;
	}

	&-prelude {
		$margin: math.div(28,14);
		@include getType('caption-title');	
		margin-bottom: #{$margin}em;

		#{$selector}--bulletin & {
			text-align: center;
		}

	}

	&-title {
		$margin: math.div(60,120);
		@include getType('h1-lg');
		margin-bottom: #{$margin}em;

		#{$selector}--bulletin & {
			$margin: math.div(96,120);
			margin-bottom: #{$margin}em;
			text-align: center;
		}
	}

	&-content {
		$margin: math.div(59,24);
		@include getType('p1-std');
		margin-bottom: #{$margin}em;
		max-width: 540px;

		#{$selector}--bulletin & {
			margin: 0 auto;
			text-align: center;
		}
	}

	&-button {
		@include resetButton;
		border-radius: 60px;
		min-width: 225px;
		padding: 2em;
		background-color: getColor('blue');
		color: getColor('white',10);

		&-label {
			@include getType('button');
		}

	}

	&-arrow {
		$width: 33.95px;
		@include resetButton;
		margin-top: 213.81px;
		width: calc(100% - #{$width});

		&-svg {
			margin: 0 auto;
			width: auto;
		}
	
	}

}

/* ---------------------------------------------------------------------
  Blocks
------------------------------------------------------------------------ */
.quoteBlock {
	$selector: &;	
	$avatar-size: 270px;
	$size: math.div($avatar-size,2);

	margin: 0 auto;
	position: relative;
	padding-bottom: 13.3em;
	max-width: 990px;

	&-image {
		border-radius: 100%;
		margin-bottom: 6em;

		#{$selector}--intro & {
			position: absolute;
			margin-left: $size * -1;
			left: 50%;
			top: $size * -1;
		}
		
	}

	&-content {
		padding-top: calc($size + 6em);
		text-align: center;

		> * {
			@include getType('h3-lg');
		}

		&::after {
			content: "\2013";
			@include getType('h3-lg');
			display: inline-block;
			text-align: center;
		}
	}

	&-attribution {
		@include getType('caption-title');
		text-align: center;
	}

}